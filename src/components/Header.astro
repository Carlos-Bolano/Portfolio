---
import ThemeToggle from "./ThemeToggle.astro";
import { navItems } from "../../constans";
---

<header class="fixed top-0 right-0 left-0 z-10 flex items-center justify-center container mx-auto lg:max-w-4xl md:max-w-2xl mt-2 px-4 md:px-0">
  <nav
    class="flex px-3 py-2 text-sm font-medium rounded-full text-gray-600 dark:text-gray-200 justify-between items-center"
  >
    <div class="flex items-center gap-2">
      <img class="rounded-full shadow-lg size-8 bg-black/20 dark:bg-yellow-500/5 ring-1 ring-black/70 dark:ring-white/20" src="/me.webp" alt="Carlos BolaÃ±o - Calisto" />
      <a class="font-semibold text-lg" href="/" title="Calisto LOGO">Calisto</a>
    </div>
    <div class="flex items-center gap-2">
      {
        navItems.map((link) => (
          <a
            class="relative block px-2 py-2 transition hover:text-yellow-500 dark:hover:text-yellow-500"
            aria-label={link.label}
            href={link.url}
          >
            {link.title}
          </a>
        ))
      }
      <div>
        <ThemeToggle />
      </div>
    </div>
  </nav>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section");
    const navItems = document.querySelectorAll("header nav a");

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add("text-yellow-500");
            } else {
              item.classList.remove("text-yellow-500");
            }
          });
        }
      });
    };
  
    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    });

    sections.forEach((section) => {
      observer.observe(section);
    });

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect();
      } else {
        sections.forEach((section) => {
          observer.observe(section);
        });
      }
    };
  });
</script>

<style>
  nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  nav {
    @apply dark:bg-gray-800/90 bg-white/50 w-full;
  }

  @keyframes nav-shadown {
    0% {
      @apply dark:bg-gray-800/0 bg-white/0;
    }
    to {
      @apply shadow-lg ring-1 backdrop-blur ring-white/10;
    }
  }
</style>
